package io.khw.domain.stock.entity;import io.khw.common.constants.ApiResponseCode;import io.khw.common.exeception.ApiException;import io.khw.common.exeception.TradingException;import org.springframework.data.annotation.Id;import jakarta.persistence.*;import lombok.*;import org.springframework.data.relational.core.mapping.Column;import org.springframework.data.relational.core.mapping.Table;import java.io.Serializable;import java.math.BigDecimal;import java.time.LocalDateTime;@NoArgsConstructor(access = AccessLevel.PROTECTED)@AllArgsConstructor(access = AccessLevel.PRIVATE)@Getter@Table(name = "stock")@Builder@Entitypublic class StockEntity implements Serializable {    @Id    @Column("id")    private Long id;    @Column("code")    private String code;    @Column("name")    private String name;    @Column("price")    private BigDecimal price;    @Column("created_at")    private LocalDateTime createdAt;    @Column("updated_at")    private LocalDateTime updatedAt;    public void updatePrice(BigDecimal price){        validatePrice(price);        this.price = price;    }    private void validatePrice(BigDecimal price) {        if (price.compareTo(BigDecimal.ZERO) <= 0) {            throw new TradingException(ApiResponseCode.STOCK_PRICE_BAD_REQUEST);        }    }}