package io.khw.common.constants;import org.springframework.http.HttpStatus;import java.util.Arrays;public enum ApiResponseCode {    INVALID_QUERY_VALUE("00100", "부적절한 query 값입니다.", HttpStatus.BAD_REQUEST),    INVALID_PAGE_VALUE("00101", "부적절한 page 값입니다.", HttpStatus.BAD_REQUEST),    INVALID_SIZE_VALUE("00102", "부적절한 size 값입니다.", HttpStatus.BAD_REQUEST),    INVALID_SORT_VALUE("00103", "부적절한 sort 값입니다.", HttpStatus.BAD_REQUEST),    MALFORMED_ENCODING("00104", "검색어 인코딩 오류", HttpStatus.BAD_REQUEST),    BAD_REQUEST("00400", "잘못된 파라미터 입니다. 오타가 있는지 확인해 주세요.", HttpStatus.BAD_REQUEST),    UNAUTHORIZED("00401", "헤더 검증에 실패 하였습니다. 헤더 값을 확인해 주세요.", HttpStatus.UNAUTHORIZED),    NOT_FOUND("00404", "잘못된 URL 입니다. 오타가 있는지 확인해 주세요.", HttpStatus.NOT_FOUND),    SERVER_ERROR("00500", "서버에 장애가 발생하였습니다. 관리자에게 문의 주세요.",  HttpStatus.INTERNAL_SERVER_ERROR),    SYSTEM_ERROR("00999", "시스템에 장애가 발생하였습니다. 관리자에게 문의 주세요.", HttpStatus.INTERNAL_SERVER_ERROR),    ;    private String code;    private String message;    private HttpStatus httpStatus;    ApiResponseCode(String code, String message, HttpStatus httpStatus) {        this.code = code;        this.message = message;        this.httpStatus = httpStatus;    }    public static ApiResponseCode getCode(String searchCode, boolean valExp) {        if(valExp) searchCode = "00" + searchCode;        String finalSearchCode = searchCode;        return Arrays.stream(ApiResponseCode.values()).filter(m -> m.code.equals(finalSearchCode)).findAny().orElse(null);    }    public static ApiResponseCode fromHttpStatus(HttpStatus searchHttpStatus) {        return Arrays.stream(ApiResponseCode.values())                .filter(m -> m.httpStatus.equals(searchHttpStatus))                .findFirst()                .orElse(SYSTEM_ERROR);    }    public String getCode() {        return code;    }    public String getMessage() {        return message;    }    public HttpStatus getHttpStatus(){        return httpStatus;    }}