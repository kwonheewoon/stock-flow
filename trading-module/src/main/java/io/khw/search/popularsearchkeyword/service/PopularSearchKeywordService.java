package io.khw.search.popularsearchkeyword.service;import io.khw.domain.popularsearchkeyword.converter.PopularSearchKeywordConverter;import io.khw.domain.popularsearchkeyword.dto.PopularSearchKeywordApiDto;import io.khw.domain.popularsearchkeyword.entity.PopularSearchKeywordEntity;import io.khw.domain.popularsearchkeyword.repository_r2dbc.PopularSearchKeywordReactRepository;import lombok.RequiredArgsConstructor;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.transaction.reactive.TransactionalOperator;import reactor.core.publisher.Flux;import reactor.core.publisher.Mono;@Service@RequiredArgsConstructorpublic class PopularSearchKeywordService {    private static Logger logger = LoggerFactory.getLogger(PopularSearchKeywordService.class);    private final PopularSearchKeywordReactRepository popularSearchKeywordRepository;    private final PopularSearchKeywordConverter popularSearchKeywordConverter;    private final TransactionalOperator transactionalOperator;    public Mono<PopularSearchKeywordEntity> save(PopularSearchKeywordEntity popularSearchKeywordEntity){        return popularSearchKeywordRepository.save(popularSearchKeywordEntity);    }    /**     * 비동기적으로 검색 키워드의 검색 횟수를 증가시키는 작업을 수행하는 메소드     *     *     * @param searchKeyword 검색 키워드     * @return Retry 객체     */    @Transactional    public Mono<Void> incrementSearchCount(String searchKeyword) {        return popularSearchKeywordRepository.findByKeyword(searchKeyword)                .flatMap(entity -> popularSearchKeywordRepository.incrementSearchVolumeByKeyword(entity.getKeyword())                        .thenReturn(entity))                .switchIfEmpty(Mono.defer(() -> popularSearchKeywordRepository.save(PopularSearchKeywordEntity.createPopularSearchKeyWord(searchKeyword, 1))))                .onErrorResume(error -> {                    // 로깅 또는 오류 처리 구현                    System.err.println("Error: " + error.getMessage());                    return Mono.empty();                })                .then();    }    /**     * 인기검색어 상위 10개 조회     *     * @return 인기검색어 API DTO List 컬렉션으로 변환후 반환     */    @Transactional(readOnly = true)    public Flux<PopularSearchKeywordApiDto> getTopKeyWords() {        return popularSearchKeywordRepository.findTop10ByOrderBySearchVolumeDesc()                        .map(popularSearchKeywordConverter::toApiDto);    }}