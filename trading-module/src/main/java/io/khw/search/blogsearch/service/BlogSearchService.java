package io.khw.search.blogsearch.service;import io.khw.common.config.PropertiesConfig;import io.khw.domain.blogsearch.dto.CommonApiResponseDto;import io.khw.domain.blogsearch.vo.SearchVo;import org.springframework.web.util.UriComponentsBuilder;import reactor.core.publisher.Mono;import java.net.URI;public interface BlogSearchService {    /**     * 카카오,네이버 블로그 검색 API 메소드 선언     *     * @param searchVo 검색 객체     * @return Mono<CommonApiResponseDto> API 정보 객체 반환     */    Mono<CommonApiResponseDto> search(SearchVo searchVo);    /**     * PropertiesConfig.ApiProperties 객체와 SearchVo 객체를 사용하여 API 요청에 필요한 URI를 생성 메소드     *     * 1.카카오, 네이버 블로그 검색 API의 파라미터 키값을 동적으로 생성     *     * @param properties applications-common.yml에 선언된 api 정보 값 가져온 객체     * @return URI API 호출 객체 반환     */    default URI buildApiUri(PropertiesConfig.ApiProperties properties, SearchVo searchVo) {        return UriComponentsBuilder.fromHttpUrl(properties.getUrl())                .path(properties.getPath())                .queryParam(properties.getQueryParamKey(), searchVo.query())                .queryParam(properties.getSortParamKey(), searchVo.sort())                .queryParam(properties.getPageParamKey(), searchVo.page())                .queryParam(properties.getSizeParamKey(), searchVo.size())                .encode()                .build().toUri();    }}